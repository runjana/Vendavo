
	   SET NOCOUNT ON;

DECLARE @QUERY VARCHAR(MAX)
SET @QUERY='
SELECT   alerttranr0_.ID             AS ID2_, 
         alerttranr0_.ACCOUNT_NUMBER AS ACCOUNT2_2_, 
         alerttranr0_.ALERT_TYPE     AS ALERT3_2_, 
         alerttranr0_.AMOUNT         AS AMOUNT2_, 
         alerttranr0_.BRANCH_CODE    AS BRANCH5_2_, 
         alerttranr0_.CHANNEL        AS CHANNEL2_, 
         alerttranr0_.CONFIRMED_DATE AS CONFIRMED7_2_, 
         alerttranr0_.CURRENCY_CODE  AS CURRENCY8_2_, 
         alerttranr0_.CUSTOMER_ID    AS CUSTOMER9_2_, 
         alerttranr0_.CUSTOMER_NAME  AS CUSTOMER10_2_, 
         alerttranr0_.MESSAGE_ID     AS MESSAGE11_2_, 
         alerttranr0_.MOBILE_NUMBER  AS MOBILE12_2_, 
         alerttranr0_.PROCESS_STATUS AS PROCESS13_2_, 
         alerttranr0_.PROCESSED_DATE AS PROCESSED14_2_, 
         alerttranr0_.RECORDED_DATE  AS RECORDED15_2_, 
         alerttranr0_.REMARKS        AS REMARKS2_, 
         alerttranr0_.TRACE_ID       AS TRACE17_2_, 
         alerttranr0_.TRAN_DATE      AS TRAN18_2_, 
         alerttranr0_.TRAN_TYPE      AS TRAN19_2_ 
FROM     ALERT_TRAN_RECORD alerttranr0_ 
WHERE    ( 
                  alerttranr0_.PROCESS_STATUS = @P0 
         OR       alerttranr0_.PROCESS_STATUS = @P1 ) 
AND      DATEDIFF(SECOND, alerttranr0_.PROCESSED_DATE, ''2017-10-09 14:12:00.746'') > 80 
AND      ( 
                  alerttranr0_.RECORDED_DATE BETWEEN @P2 AND      @P3 ) 
ORDER BY alerttranr0_.ID ASC
'

DECLARE @TABLENAME TABLE(TABLE_NAME VARCHAR(MAX),ALIAS VARCHAR(MAX))
DECLARE @COLUMNS_JOIN TABLE(COL VARCHAR(MAX),COLUMN_NAME VARCHAR(MAX),ALIAS VARCHAR(MAX))
DECLARE @NAME VARCHAR(MAX),@ALIAS VARCHAR(MAX),@J_QUERY VARCHAR(MAX),@W_QUERY VARCHAR(MAX)
DECLARE @WHERE_JOIN TABLE(COL VARCHAR(MAX),COLUMN_NAME VARCHAR(MAX),ALIAS VARCHAR(MAX))

----------------------//FROM//------------
SET @QUERY= LTRIM(substring(@QUERY,charindex('FROM',@query COLLATE SQL_Latin1_General_CP1_CS_AS)+4,len(@query)))
SET @NAME=LTRIM(left(@QUERY,CHARINDEX(' ',@QUERY)))
SET @QUERY= LTRIM(substring(@QUERY,CHARINDEX(@NAME,@QUERY)+len(@NAME),len(@query)))
SET @ALIAS=LTRIM(left(@QUERY,CHARINDEX(' ',@QUERY)))
SET @QUERY= LTRIM(substring(@QUERY,CHARINDEX(@ALIAS,@QUERY)+len(@ALIAS),len(@query)))
INSERT INTO @TABLENAME VALUES (@NAME,@ALIAS)

UPDATE @TABLENAME SET TABLE_NAME=LTRIM(RTRIM(TABLE_NAME))
UPDATE @TABLENAME SET ALIAS=LTRIM(RTRIM(ALIAS))

----------------------//JOIN//------------
SET @J_QUERY=@QUERY

WHILE(CHARINDEX('JOIN ',@QUERY COLLATE SQL_Latin1_General_CP1_CS_AS))>0
BEGIN
SET @QUERY= LTRIM(substring(@QUERY,charindex('JOIN ',@query COLLATE SQL_Latin1_General_CP1_CS_AS)+5,len(@query)))
SET @NAME=LTRIM(left(@QUERY,CHARINDEX(' ',@QUERY)))
SET @QUERY= LTRIM(substring(@QUERY,CHARINDEX(@NAME,@QUERY)+len(@NAME),len(@query)))
SET @ALIAS=LTRIM(left(@QUERY,CHARINDEX(' ',@QUERY)))
SET @QUERY= LTRIM(substring(@QUERY,CHARINDEX(@ALIAS,@QUERY)+len(@ALIAS),len(@query)))
INSERT INTO @TABLENAME VALUES (LTRIM(RTRIM(@NAME)),LTRIM(RTRIM(@ALIAS)))
END

UPDATE @TABLENAME SET TABLE_NAME=LTRIM(RTRIM(TABLE_NAME))
UPDATE @TABLENAME SET ALIAS=LTRIM(RTRIM(ALIAS))

---------------------------------------// JOIN //----------------------------------------------

IF (CHARINDEX('WHERE',@J_QUERY)<>0)
SET @J_QUERY=SUBSTRING(@J_QUERY,0,CHARINDEX('WHERE ',@J_QUERY COLLATE SQL_Latin1_General_CP1_CS_AS))
ELSE
SET @J_QUERY=SUBSTRING(@J_QUERY,0,LEN(@J_QUERY))


DECLARE  @strngLen int
DECLARE @split TABLE(siteId VARCHAR(100))
WHILE CHARINDEX(' ', @J_QUERY) > 0
BEGIN
    SET @strngLen = CHARINDEX(' ', @J_QUERY);

    INSERT INTO @split
    SELECT SUBSTRING(@J_QUERY,1,@strngLen - 1);

    SET @J_QUERY = SUBSTRING(@J_QUERY, @strngLen + 1, LEN(@J_QUERY));
END

INSERT INTO @split
SELECT @J_QUERY

INSERT INTO @COLUMNS_JOIN
SELECT SITEID,SUBSTRING(SITEID,0,CHARINDEX('.',SITEID)),REPLACE(SITEID,SUBSTRING(SITEID,0,CHARINDEX('.',SITEID))+'.','') FROM @SPLIT WHERE SITEID  LIKE '%.%'

---------------------------------------// WHERE //----------------------------------------------

SET @W_QUERY=SUBSTRING(@QUERY,CHARINDEX('WHERE',@QUERY COLLATE SQL_Latin1_General_CP1_CS_AS),LEN(@QUERY))

WHILE CHARINDEX(' ', @W_QUERY) > 0
BEGIN
    SET @strngLen = CHARINDEX(' ', @W_QUERY);
    INSERT INTO @split
    SELECT SUBSTRING(@W_QUERY,1,@strngLen - 1);

    SET @W_QUERY = SUBSTRING(@W_QUERY, @strngLen + 1, LEN(@W_QUERY));
END

INSERT INTO @split
SELECT @W_QUERY

INSERT INTO @WHERE_JOIN
SELECT SITEID,SUBSTRING(SITEID,0,CHARINDEX('.',SITEID)),REPLACE(SITEID,SUBSTRING(SITEID,0,CHARINDEX('.',SITEID))+'.','') FROM @SPLIT WHERE SITEID  LIKE '%.%'

-----------------------------------------------------// RESULT //----------------------

UPDATE @WHERE_JOIN SET COL=LTRIM(RTRIM(COL)),COLUMN_NAME=LTRIM(RTRIM(COLUMN_NAME)),ALIAS=LTRIM(RTRIM(ALIAS))
UPDATE @COLUMNS_JOIN SET COL=LTRIM(RTRIM(COL)),COLUMN_NAME=LTRIM(RTRIM(COLUMN_NAME)),ALIAS=LTRIM(RTRIM(ALIAS))

insert into @COLUMNS_JOIN
select * from @WHERE_JOIN

INSERT INTO @COLUMNS_JOIN
SELECT
	DISTINCT
	   m.COL 
     , m.COLUMN_NAME
     , ALIAS = STUFF((
          SELECT DISTINCT ',' + md.ALIAS
          FROM @WHERE_JOIN md
          WHERE m.COLUMN_NAME = md.COLUMN_NAME
          FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 1, '')
FROM @WHERE_JOIN m


--INCASE IN BELOW DOESNT SHOW RESULT

-- SELECT DISTINCT 'CREATE INDEX IX_f1_tbllogtable_'+REPLACE(ALIAS,',','_')+' ON f1_tbllogtable ('+ALIAS+');' FROM @COLUMNS_JOIN


SELECT DISTINCT 
	'if not exists(select name from sys.indexes where name=''IX_'+T.TABLE_NAME+'__'+REPLACE(C.ALIAS,',','_')+''') CREATE INDEX IX_'+replace(T.TABLE_NAME,'.','_')+'__'+REPLACE(C.ALIAS,',','_')+' ON '+TABLE_NAME+' ('+C.ALIAS+');'
 FROM @COLUMNS_JOIN C
INNER JOIN  @TABLENAME T  ON (T.ALIAS=C.COLUMN_NAME)




/*  

------------ RENAMING INDEX 

CREATE TABLE TEST1 (QUERY VARCHAR(MAX))
INSERT INTO TEST1 VALUES ();

ALTER TABLE TEST1 ADD MIDDLE_QUERY  VARCHAR(MAX),NEW_QUERY  VARCHAR(MAX)

SELECT * FROM TEST1

SELECT SUBSTRING(QUERY,CHARINDEX('_',QUERY)+1,LEN(QUERY)),* FROM TEST1

	UPDATE TEST1 SET MIDDLE_QUERY= SUBSTRING(QUERY,CHARINDEX('_',QUERY)+1,LEN(QUERY)) 

	UPDATE TEST1 SET MIDDLE_QUERY= NULL WHERE QUERY=MIDDLE_QUERY 

SELECT CONCAT(NEW_QUERY,LEFT(MIDDLE_QUERY,1)),MIDDLE_QUERY,NEW_QUERY  FROM TEST1 

 UPDATE TEST1 SET NEW_QUERY= CONCAT(NEW_QUERY,LEFT(MIDDLE_QUERY,1)) 

 UPDATE TEST1 SET QUERY=MIDDLE_QUERY


 GO 20
 
 */
 
 /*
 ----------------- IF AFTER REMANING INDEXES HAVE SAME NAME THAN 
 
ALTER TABLE TEST1 ADD ID INT IDENTITY(1,1)
SELECT QUERY,id,ROW_NUMBER() OVER (PARTITION BY QUERY ORDER BY id) AS ROWS INTO #TEST1
 FROM TEST1
 order by id

  select replace(case when rows=1 then query
		else concat(query,convert(varchar,rows-1)) end ,' ','')
 
  from #TEST1 order by id 



*/