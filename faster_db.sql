USE [NBN_Electrolux_Test]
GO

/****** Object:  StoredProcedure [customized].[faster_db]    Script Date: 2018-07-11 10:51:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






CREATE  procedure [customized].[faster_db]
as begin

drop table #INDEX

IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME = 'MAINTENANCE_OF_INDEX')
BEGIN
CREATE   TABLE CUSTOMIZED.MAINTENANCE_OF_INDEX 
			( ID INT       IDENTITY(1,1),
			DATABASE__NAME  VARCHAR(200),
			SCHEMA__NAME    VARCHAR(200),
			TABLE_NAME      VARCHAR(200),
			INDEX_NAME      VARCHAR(200),
			INDEX_TYPE      VARCHAR(200),
			AVG_GRAG        VARCHAR(200),
			TASK_PERFORMED  VARCHAR(200),			
			TASK_STATUS     VARCHAR(200));
END

	SELECT Db_name(DATABASE_ID)       									AS  database_name, 
		   T.TABLE_SCHEMA             									AS  schemaname, 
		   Object_name(IND.OBJECT_ID) 									AS  TableName, 
		   IND.NAME                   									AS  IndexName, 
		   INDEXSTATS.INDEX_TYPE_DESC 									AS  IndexType, 
		   Cast(INDEXSTATS.AVG_FRAGMENTATION_IN_PERCENT AS VARCHAR(20)) AS avg_fragmentation_in_percent 
	INTO   #INDEX 
	FROM   SYS.Dm_db_index_physical_stats(Db_id(), NULL, NULL, NULL, NULL) INDEXSTATS 
		   INNER JOIN SYS.INDEXES IND			   ON IND.OBJECT_ID = INDEXSTATS.OBJECT_ID AND IND.INDEX_ID = INDEXSTATS.INDEX_ID 
		   INNER JOIN INFORMATION_SCHEMA.TABLES T  ON Object_id (T.TABLE_SCHEMA + '.' + T.TABLE_NAME) = IND.OBJECT_ID 
		   WHERE  INDEXSTATS.AVG_FRAGMENTATION_IN_PERCENT > 5 
       
       
	TRUNCATE TABLE CUSTOMIZED.MAINTENANCE_OF_INDEX ;

	INSERT INTO customized.MAINTENANCE_OF_INDEX  (DATABASE__NAME,SCHEMA__NAME,TABLE_NAME,INDEX_NAME,INDEX_TYPE,AVG_GRAG,TASK_PERFORMED,TASK_STATUS)
	SELECT database_name,schemaname,TableName, IndexName,IndexType,avg_fragmentation_in_percent,NULL,NULL FROM #INDEX 

	UPDATE customized.MAINTENANCE_OF_INDEX SET TASK_PERFORMED='USE ['+DATABASE__NAME+'];ALTER INDEX ['+INDEX_NAME+'] ON '+QUOTENAME(SCHEMA__NAME)+'.'+QUOTENAME(TABLE_NAME)+' REORGANIZE;' WHERE convert(float,avg_grag)<30
	UPDATE customized.MAINTENANCE_OF_INDEX SET TASK_PERFORMED='USE ['+DATABASE__NAME+'];ALTER INDEX ['+INDEX_NAME+'] ON '+QUOTENAME(SCHEMA__NAME)+'.'+QUOTENAME(TABLE_NAME)+' REBUILD;' WHERE convert(float,avg_grag)>30

 
	BEGIN 
	DECLARE  @INDEX_NAME  VARCHAR(200), @FRAGMENT_PERCENT VARCHAR(200),@TASK  VARCHAR(2000), @DATABASE_NAME  VARCHAR(200), @SCHEMA_NAME  VARCHAR(200),  @TABLE_NAME  VARCHAR(200);

	DECLARE INDEX_FRAGMENTATION CURSOR FOR 
		SELECT DATABASE__NAME,SCHEMA__NAME,TABLE_NAME, INDEX_NAME, AVG_GRAG,TASK_PERFORMED FROM customized.MAINTENANCE_OF_INDEX
		OPEN INDEX_FRAGMENTATION; 
		FETCH NEXT FROM INDEX_FRAGMENTATION INTO @DATABASE_NAME,@SCHEMA_NAME,@TABLE_NAME, @INDEX_NAME, @FRAGMENT_PERCENT,@TASK
			WHILE (@@FETCH_STATUS = 0) 		   
			BEGIN 
			
				IF NOT EXISTS(	SELECT 1 FROM SYS.DM_TRAN_LOCKS WHERE RESOURCE_DATABASE_ID = DB_ID() AND RESOURCE_ASSOCIATED_ENTITY_ID = OBJECT_ID(QUOTENAME(@SCHEMA_NAME)+'.'+QUOTENAME(@TABLE_NAME)))
				BEGIN
					UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='STARTED' WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
					PRINT (@TASK);
					BEGIN TRY
						EXEC (@TASK);
						UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='COMPLETED'  WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
					END TRY
					BEGIN CATCH
						UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='FAILED'  WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
					END CATCH
				END

				ELSE
				BEGIN
				WAITFOR DELAY '00:00:10';	
				IF NOT EXISTS(	SELECT 1 FROM SYS.DM_TRAN_LOCKS WHERE RESOURCE_DATABASE_ID = DB_ID() AND RESOURCE_ASSOCIATED_ENTITY_ID = OBJECT_ID(QUOTENAME(@SCHEMA_NAME)+'.'+QUOTENAME(@TABLE_NAME)))
				BEGIN

					UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='STARTED' WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
					PRINT (@TASK);
					BEGIN TRY
					EXEC (@TASK);
					UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='COMPLETED'  WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
				END TRY
				BEGIN CATCH
					UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='FAILED'  WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
				END CATCH
				END

				ELSE
					UPDATE CUSTOMIZED.MAINTENANCE_OF_INDEX SET TASK_STATUS='LOCKED'  WHERE TABLE_NAME=@TABLE_NAME AND INDEX_NAME=@INDEX_NAME AND  SCHEMA__NAME=@SCHEMA_NAME AND DATABASE__NAME=@DATABASE_NAME
				
				END

			
			FETCH NEXT FROM INDEX_FRAGMENTATION INTO @DATABASE_NAME,@SCHEMA_NAME,@TABLE_NAME, @INDEX_NAME, @FRAGMENT_PERCENT,@TASK
			END;
		CLOSE INDEX_FRAGMENTATION;
		DEALLOCATE INDEX_FRAGMENTATION;
	END;	
	   

 DROP TABLE #INDEX
 



 
  BEGIN TRY
    EXEC sp_updatestats
  END TRY
  BEGIN CATCH
    IF ERROR_NUMBER() = 15247
      BEGIN
      	  SELECT  @TSQL = isnull(@TSQL,'') + st   
		  FROM (
			SELECT 'UPDATE STATISTICS '+'['+schema_name(t.schema_id)+'].['+t.name +']; ' AS st
	        FROM sys.tables t 
	        WHERE SCHEMA_NAME(t.SCHEMA_ID) <> 'history'
	          AND LEFT(t.name,3) NOT IN ('asp','nai')
	          AND EXISTS (SELECT NULL FROM sys.stats s 
	                      WHERE t.OBJECT_ID = s.OBJECT_ID
                          and STATS_DATE(t.OBJECT_ID, s.stats_id) < DATEADD(d,-7,GETDATE())
                       )
	) t

		   print @TSQL
	       EXEC (@TSQL)
	    END    
  END CATCH

 end


GO


